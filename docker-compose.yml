services:
  valkey:
    image: valkey/valkey:8.1-alpine

  qdrant:
    image: qdrant/qdrant:v1.13.2
    ports:
      - "127.0.0.1:6333:6333"
    volumes:
      - type: bind
        source: ./data/qdrant
        target: /qdrant/storage

  analyser:
    build: .

    volumes:
      - type: bind
        source: ./data/
        target: /data/
      - type: bind
        source: ./data/ray/
        target: /tmp/ray/
      - type: bind
        source: ./data/models/
        target: /models/
      - type: bind
        source: ./analyser
        target: /app/analyser
      - type: bind
        source: ./packages
        target: /app/packages
      - type: bind
        source: ./backend
        target: /app/backend
    working_dir: /app/
    environment:
      - HF_HOME=/models
    command: uv run --package analyser analyser/src/analyser/server.py -v -c analyser/config.toml

  postgres:
    image: postgres:17.5
    volumes:
      - ./data/db/:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/data/
    ports:
      - "127.0.0.1:5432:5432"

  memcached:
    image: memcached:1.6.10-buster
    command: -I 32m
    ports:
      - "127.0.0.1:11211:11211"

  backend:
    build: .
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - type: bind
        source: ./data/
        target: /data/
      - type: bind
        source: ./data/ray/
        target: /tmp/ray/
      - type: bind
        source: ./data/models/
        target: /models/
      - type: bind
        source: ./analyser
        target: /app/analyser
      - type: bind
        source: ./packages
        target: /app/packages
      - type: bind
        source: ./backend
        target: /app/backend
      - type: bind
        source: ./pyproject.toml
        target: /app/pyproject.toml
      - type: bind
        source: ./.python-version
        target: /app/.python-version
    working_dir: /app/
    command: uv run --package backend python3 backend/src/backend/manage.py runserver 0.0.0.0:8000
    depends_on:
      - postgres
      - memcached

  celery:
    build: .
    volumes:
      - type: bind
        source: ./data/
        target: /data/
      - type: bind
        source: ./data/ray/
        target: /tmp/ray/
      - type: bind
        source: ./data/models/
        target: /models/
      - type: bind
        source: ./analyser
        target: /app/analyser
      - type: bind
        source: ./packages
        target: /app/packages
      - type: bind
        source: ./backend
        target: /app/backend
    working_dir: /app/backend/src/backend/
    environment:
      - GRPC_ENABLE_FORK_SUPPORT=1
      - GRPC_POLL_STRATEGY=poll
    command: uv run --package backend celery -A fileharbor worker -l INFO
    depends_on:
      - postgres
      - memcached

  # frontend:
  #   image: app/frontend
  #   build:
  #     context: ./frontend
  #   ports:
  #     - 8080:80
  #   volumes:
  #     - type: bind
  #       source: ./frontend/
  #       target: /app/frontend
  #     - type: bind
  #       source: ./data/
  #       target: /data
  #   working_dir: /app/frontend

  frontend_vue3:
    image: app/frontend_vue3
    build:
      context: ./frontend_vue3
    ports:
      - "127.0.0.1:8080:80"
    volumes:
      - type: bind
        source: ./frontend_vue3/
        target: /app/frontend
      - type: bind
        source: ./data/
        target: /data
    working_dir: /app/frontend
